function ExtraAjaxNavigation(options){var self=this;self.options=$.extend({wrapper:null,contentSelector:'.extra-ajax-navigation-wrapper',listSelector:'.extra-ajax-navigation-list',itemSelector:'.extra-ajax-navigation-item',nextButtonSelector:'.extra-ajax-navigation-next-button',previousButtonSelector:'.extra-ajax-navigation-previous-button',loadingClass:'extra-ajax-navigation-loading',nextCompleteClass:'extra-ajax-navigation-next-complete',previousCompleteClass:'extra-ajax-navigation-previous-complete',noMoreLinkClass:'extra-ajax-navigation-no-more-link',pageMarkerSelector:'.extra-ajax-navigation-page-marker',startPageAt:1,historyReplaceState:!1},options);if(self.options.wrapper===null||self.options.wrapper.length<1){console.warn("Extra Ajax Navigation: no wrapper specified");return{}}
var $window=$(window),$list=self.options.wrapper.find(self.options.listSelector),$nextButton=self.options.wrapper.find(self.options.nextButtonSelector),$previousButton=self.options.wrapper.find(self.options.previousButtonSelector),$pageMarkers=self.options.wrapper.find(self.options.pageMarkerSelector),currentPageNum=self.options.startPageAt,isLoading=!1,nextIsComplete=!1,previousIsComplete=!1,wHeight=0,scrollTop=0,pages=[],firstPage=null,allowScrollUpdate=!1;function clickHandler($button,isPrevious){var url=$button.attr("href");loadNextPage(url,isPrevious)}
function loadNextPage(url,isPrevious){if(isLoading||(nextIsComplete&&!isPrevious)||(previousIsComplete&&isPrevious)){return}
isLoading=!0;self.options.wrapper.addClass(self.options.loadingClass);var $tmpDiv=$("<div></div>");$.ajax(url,{cache:!0,dataType:'html',success:function(rawHtml,status,jqXHR){$tmpDiv.append(rawHtml);$tmpDiv=$tmpDiv.find(self.options.contentSelector);isLoading=!1;self.options.wrapper.removeClass(self.options.loadingClass);if(status==="error"){nextIsComplete=!0;previousIsComplete=!0;self.options.wrapper.addClass(self.options.nextCompleteClass);self.options.wrapper.addClass(self.options.previousCompleteClass);self.options.wrapper.trigger("extra:ajaxNavigation:complete extra:ajaxNavigation:error")}else{self.options.wrapper.trigger("extra:ajaxNavigation:loaded",[rawHtml,status])}
var $items=$tmpDiv.find(self.options.itemSelector),$newNextButton=$tmpDiv.find(self.options.nextButtonSelector),$newPreviousButton=$tmpDiv.find(self.options.previousButtonSelector),$pageMarker=$tmpDiv.find(self.options.pageMarkerSelector);if($pageMarker.length){$pageMarker.data('rawHtml',rawHtml);if(isPrevious){if(self.options.wrapper.find(self.options.pageMarkerSelector).length>0){$pageMarker.insertBefore(self.options.wrapper.find(self.options.pageMarkerSelector).first())}else{$pageMarker.appendTo($list)}}else{if(self.options.wrapper.find(self.options.itemSelector).length>0){$pageMarker.insertAfter(self.options.wrapper.find(self.options.itemSelector).last())}else{$pageMarker.appendTo($list)}}}
$pageMarkers=self.options.wrapper.find(self.options.pageMarkerSelector);if($items.length){self.options.wrapper.trigger("extra:ajaxNavigation:beforeAddItems",[isPrevious,$items,$pageMarker]);if(isPrevious){$items.insertAfter(self.options.wrapper.find(self.options.itemSelector+', '+self.options.pageMarkerSelector).first())}else{$items.insertAfter(self.options.wrapper.find(self.options.itemSelector+', '+self.options.pageMarkerSelector).last())}
self.options.wrapper.trigger("extra:ajaxNavigation:afterAddItems",[isPrevious,$items,$pageMarker])}
if(!isPrevious){if($newNextButton.length>0&&$nextButton.length>0){$nextButton.off("click",onClickNextButton);if(!$newNextButton.closest(self.options.itemSelector).length){$newNextButton.insertAfter($nextButton)}
$nextButton.remove();$nextButton=$newNextButton;$nextButton.on("click",onClickNextButton)}
if(!$newNextButton.length||$newNextButton.hasClass(self.options.noMoreLinkClass)){nextIsComplete=!0;$nextButton.removeAttr("href");self.options.wrapper.addClass(self.options.nextCompleteClass);self.options.wrapper.trigger("extra:ajaxNavigation:nextComplete")}}else{if($newPreviousButton.length>0&&$previousButton.length>0){$previousButton.off("click",onClickPreviousButton);if(!$newPreviousButton.closest(self.options.itemSelector).length){$newPreviousButton.insertAfter($previousButton)}
$previousButton.remove();$previousButton=$newPreviousButton;$previousButton.on("click",onClickPreviousButton)}
if(!$newPreviousButton.length||$newPreviousButton.hasClass(self.options.noMoreLinkClass)){previousIsComplete=!0;$previousButton.removeAttr("href");self.options.wrapper.addClass(self.options.previousCompleteClass);self.options.wrapper.trigger("extra:ajaxNavigation:previousComplete")}}
$tmpDiv.empty().remove();resizeHandler()}})}
function onClickNextButton(event){event.preventDefault();if(!$(this).hasClass(self.options.noMoreLinkClass)){clickHandler($(this),!1)}}
function onClickPreviousButton(event){event.preventDefault();if(!$(this).hasClass(self.options.noMoreLinkClass)){clickHandler($(this),!0)}}
function calculatePagePositions(){pages=[];firstPage=null;$pageMarkers.each(function(){var $marker=$(this),pageNum=$marker.data('page-num'),pagePermalink=$marker.data('page-permalink'),pageTitle=$marker.data('page-title'),top=$marker.offset().top,rawHtml=$marker.data('rawHtml'),page={top:top,num:pageNum,permalink:pagePermalink,title:pageTitle,rawHtml:rawHtml};pages.push(page);if(firstPage===null||firstPage.top>top){firstPage=page}})}
function getScrolledPage(scrollTop){var i=0,length=pages.length,currentPage=null,goodPage=null;while(i<length){currentPage=pages[i];if(currentPage.top<scrollTop){if(goodPage===null||goodPage.top<currentPage.top){goodPage=currentPage}}
i++}
if(goodPage===null){goodPage=firstPage}
return goodPage}
function changeCurrentPage(page){if(currentPageNum!==page.num){currentPageNum=page.num;if(window.history&&window.history.pushState&&window.history.replaceState){if(self.options.historyReplaceState===!0){window.history.replaceState("","",page.permalink)}else{window.history.pushState("","",page.permalink)}
document.title=page.title;self.options.wrapper.trigger("extra:ajaxNavigation:pageChanged",[page])}}}
function resizeHandler(){wHeight=window.innerHeight;calculatePagePositions();scrollUpdate()}
function scrollUpdate(){scrollTop=$window.scrollTop();var scrolledPage=getScrolledPage(scrollTop);if(scrolledPage){changeCurrentPage(scrolledPage)}}
function repaint(){if(allowScrollUpdate){allowScrollUpdate=!1;scrollUpdate()}
window.requestAnimationFrame(repaint)}
function scrollHandler(){allowScrollUpdate=!0}
function externalLoad(event,url,isPrevious,reset){if(reset){nextIsComplete=!1;previousIsComplete=!1;self.options.wrapper.find(self.options.listSelector).html('')}
loadNextPage(url,isPrevious)}
$window.on("extra:resize",resizeHandler);$window.on("scroll",scrollHandler);$nextButton.on("click",onClickNextButton);$previousButton.on("click",onClickPreviousButton);self.options.wrapper.on("extra:ajaxNavigation:update",resizeHandler);self.options.wrapper.on("extra:ajaxNavigation:load",externalLoad);self.destroy=function(){self.options.wrapper.trigger("extra:ajaxNavigation:destroyed");$window.off("extra:resize",resizeHandler);$window.off("scroll",scrollHandler);$nextButton.off("click",onClickNextButton);$previousButton.off("click",onClickPreviousButton);self.options.wrapper.off("extra:ajaxNavigation:update",resizeHandler);self.options.wrapper.off("extra:ajaxNavigation:load",externalLoad)};repaint();resizeHandler();return self}